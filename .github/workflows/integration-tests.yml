name: Integration Tests

on:
  workflow_dispatch:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
        matrix:
            include:
                - arch: amd64
                - arch: arm64

    steps:
      - uses: actions/checkout@v4
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3
          with:
            platforms: linux/${{ matrix.arch }}

      - name: Build image repo name
        run: |
          version=""
          overwrite_latest=""
          if [ -n "${{ github.event.inputs.image_tag_version }}" ]; then
              # use input string as version
              version="${{ github.event.inputs.image_tag_version }}"
              overwrite_latest="${{ github.event.inputs.override_latest }}"
          else
              # use git tag as version
              version="${{ github.ref_name }}"
              overwrite_latest="true"
          fi

          if [ -z "$version" ] || [ -z "$overwrite_latest" ]; then
              echo "Image tag version or overwrite_latest flag could not be determined"
              exit 1
          fi

          repo="${{ github.repository }}"
          echo VERSIONED_IMAGE_FQN="ghcr.io/${repo,,}:$version-${{ matrix.arch }}" >> $GITHUB_ENV
          echo LATEST_IMAGE_FQN="ghcr.io/${repo,,}:latest-${{ matrix.arch }}" >> $GITHUB_ENV
          echo OVERWRITE_LATEST="$overwrite_latest" >> $GITHUB_ENV

      - name: Docker build
          uses: docker/build-push-action@v6
          with:
            context: src
            file: src/Dockerfile
            platforms: linux/${{ matrix.arch }}
            tags: |
              ${{ env.VERSIONED_IMAGE_FQN }}
              ${{ env.LATEST_IMAGE_FQN }}
            load: true
            push: false

      - name: Install Test Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r tests/requirements.txt

      - name: Run python based integration tests via pytest
        env:
          DOCKER_IMAGE_FQN: ${{ env.VERSIONED_IMAGE_FQN }}
        run: |
          pytest tests/
